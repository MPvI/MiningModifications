// Date: 08.09.2014 03:42:30
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.ragingart.maatsmod.client.renderer.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelMultitool extends ModelBase
{
  //fields
    ModelRenderer Griff;
    ModelRenderer kern;
    ModelRenderer spitze;
    ModelRenderer h1;
    ModelRenderer h2;
    ModelRenderer h3;
    ModelRenderer h4;
    ModelRenderer h5;
    ModelRenderer u1;
    ModelRenderer u2;
    ModelRenderer u3;
    ModelRenderer u4;
    ModelRenderer u5;
    ModelRenderer l1;
    ModelRenderer l2;
    ModelRenderer l3;
    ModelRenderer l4;
    ModelRenderer l5;
    ModelRenderer r1;
    ModelRenderer r2;
    ModelRenderer r3;
    ModelRenderer r4;
    ModelRenderer r5;
    ModelRenderer ende1;
    ModelRenderer ende2;
    ModelRenderer griff1;
    ModelRenderer griff2;
    ModelRenderer griff3;
  
  public ModelMultitool()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      Griff = new ModelRenderer(this, 0, 19);
      Griff.addBox(-13F, -1F, -1F, 13, 2, 2);
      Griff.setRotationPoint(-6F, 0F, 0F);
      Griff.setTextureSize(64, 32);
      Griff.mirror = true;
      setRotation(Griff, 0F, 0F, 0F);
      kern = new ModelRenderer(this, 0, 24);
      kern.addBox(0F, -2F, -2F, 13, 4, 4);
      kern.setRotationPoint(-6F, 0F, 0F);
      kern.setTextureSize(64, 32);
      kern.mirror = true;
      setRotation(kern, 0F, 0F, 0F);
      spitze = new ModelRenderer(this, 0, 10);
      spitze.addBox(13F, -1F, -1F, 2, 2, 2);
      spitze.setRotationPoint(-6F, 0F, 0F);
      spitze.setTextureSize(64, 32);
      spitze.mirror = true;
      setRotation(spitze, 0F, 0F, 0F);
      h1 = new ModelRenderer(this, 12, 0);
      h1.addBox(9F, -4F, -2F, 3, 2, 1);
      h1.setRotationPoint(-6F, 0F, 0F);
      h1.setTextureSize(64, 32);
      h1.mirror = true;
      setRotation(h1, 0F, 0F, 0F);
      h2 = new ModelRenderer(this, 12, 0);
      h2.addBox(7F, -5F, -1F, 3, 2, 1);
      h2.setRotationPoint(-6F, 0F, 0F);
      h2.setTextureSize(64, 32);
      h2.mirror = true;
      setRotation(h2, 0F, 0F, 0F);
      h3 = new ModelRenderer(this, 12, 0);
      h3.addBox(5F, -6F, 0F, 3, 2, 1);
      h3.setRotationPoint(-6F, 0F, 0F);
      h3.setTextureSize(64, 32);
      h3.mirror = true;
      setRotation(h3, 0F, 0F, 0F);
      h4 = new ModelRenderer(this, 12, 0);
      h4.addBox(3F, -7F, 1F, 3, 2, 1);
      h4.setRotationPoint(-6F, 0F, 0F);
      h4.setTextureSize(64, 32);
      h4.mirror = true;
      setRotation(h4, 0F, 0F, 0F);
      h5 = new ModelRenderer(this, 12, 0);
      h5.addBox(1F, -8F, 2F, 3, 2, 1);
      h5.setRotationPoint(-6F, 0F, 0F);
      h5.setTextureSize(64, 32);
      h5.mirror = true;
      setRotation(h5, 0F, 0F, 0F);
      u1 = new ModelRenderer(this, 12, 4);
      u1.addBox(9F, 2F, 1F, 3, 2, 1);
      u1.setRotationPoint(-6F, 0F, 0F);
      u1.setTextureSize(64, 32);
      u1.mirror = true;
      setRotation(u1, 0F, 0F, 0F);
      u2 = new ModelRenderer(this, 12, 4);
      u2.addBox(7F, 3F, 0F, 3, 2, 1);
      u2.setRotationPoint(-6F, 0F, 0F);
      u2.setTextureSize(64, 32);
      u2.mirror = true;
      setRotation(u2, 0F, 0F, 0F);
      u3 = new ModelRenderer(this, 12, 4);
      u3.addBox(5F, 4F, -1F, 3, 2, 1);
      u3.setRotationPoint(-6F, 0F, 0F);
      u3.setTextureSize(64, 32);
      u3.mirror = true;
      setRotation(u3, 0F, 0F, 0F);
      u4 = new ModelRenderer(this, 12, 4);
      u4.addBox(3F, 5F, -2F, 3, 2, 1);
      u4.setRotationPoint(-6F, 0F, 0F);
      u4.setTextureSize(64, 32);
      u4.mirror = true;
      setRotation(u4, 0F, 0F, 0F);
      u5 = new ModelRenderer(this, 12, 4);
      u5.addBox(1F, 6F, -3F, 3, 2, 1);
      u5.setRotationPoint(-6F, 0F, 0F);
      u5.setTextureSize(64, 32);
      u5.mirror = true;
      setRotation(u5, 0F, 0F, 0F);
      l1 = new ModelRenderer(this, 0, 4);
      l1.addBox(9F, -2F, 2F, 3, 1, 2);
      l1.setRotationPoint(-6F, 0F, 0F);
      l1.setTextureSize(64, 32);
      l1.mirror = true;
      setRotation(l1, 0F, 0F, 0F);
      l2 = new ModelRenderer(this, 0, 4);
      l2.addBox(7F, -1F, 3F, 3, 1, 2);
      l2.setRotationPoint(-6F, 0F, 0F);
      l2.setTextureSize(64, 32);
      l2.mirror = true;
      setRotation(l2, 0F, 0F, 0F);
      l3 = new ModelRenderer(this, 0, 4);
      l3.addBox(5F, 0F, 4F, 3, 1, 2);
      l3.setRotationPoint(-6F, 0F, 0F);
      l3.setTextureSize(64, 32);
      l3.mirror = true;
      setRotation(l3, 0F, 0F, 0F);
      l4 = new ModelRenderer(this, 0, 4);
      l4.addBox(3F, 1F, 5F, 3, 1, 2);
      l4.setRotationPoint(-6F, 0F, 0F);
      l4.setTextureSize(64, 32);
      l4.mirror = true;
      setRotation(l4, 0F, 0F, 0F);
      l5 = new ModelRenderer(this, 0, 4);
      l5.addBox(1F, 2F, 6F, 3, 1, 2);
      l5.setRotationPoint(-6F, 0F, 0F);
      l5.setTextureSize(64, 32);
      l5.mirror = true;
      setRotation(l5, 0F, 0F, 0F);
      r1 = new ModelRenderer(this, 0, 0);
      r1.addBox(9F, 1F, -4F, 3, 1, 2);
      r1.setRotationPoint(-6F, 0F, 0F);
      r1.setTextureSize(64, 32);
      r1.mirror = true;
      setRotation(r1, 0F, 0F, 0F);
      r2 = new ModelRenderer(this, 0, 0);
      r2.addBox(7F, 0F, -5F, 3, 1, 2);
      r2.setRotationPoint(-6F, 0F, 0F);
      r2.setTextureSize(64, 32);
      r2.mirror = true;
      setRotation(r2, 0F, 0F, 0F);
      r3 = new ModelRenderer(this, 0, 0);
      r3.addBox(5F, -1F, -6F, 3, 1, 2);
      r3.setRotationPoint(-6F, 0F, 0F);
      r3.setTextureSize(64, 32);
      r3.mirror = true;
      setRotation(r3, 0F, 0F, 0F);
      r4 = new ModelRenderer(this, 0, 0);
      r4.addBox(3F, -2F, -7F, 3, 1, 2);
      r4.setRotationPoint(-6F, 0F, 0F);
      r4.setTextureSize(64, 32);
      r4.mirror = true;
      setRotation(r4, 0F, 0F, 0F);
      r5 = new ModelRenderer(this, 0, 0);
      r5.addBox(1F, -3F, -8F, 3, 1, 2);
      r5.setRotationPoint(-6F, 0F, 0F);
      r5.setTextureSize(64, 32);
      r5.mirror = true;
      setRotation(r5, 0F, 0F, 0F);
      ende1 = new ModelRenderer(this, 46, 24);
      ende1.addBox(-16F, -2F, -2F, 3, 4, 4);
      ende1.setRotationPoint(-6F, 0F, 0F);
      ende1.setTextureSize(64, 32);
      ende1.mirror = true;
      setRotation(ende1, 0F, 0F, 0F);
      ende2 = new ModelRenderer(this, 36, 22);
      ende2.addBox(-17F, -1F, -1F, 1, 2, 2);
      ende2.setRotationPoint(-6F, 0F, 0F);
      ende2.setTextureSize(64, 32);
      ende2.mirror = true;
      setRotation(ende2, 0F, 0F, 0F);
      griff1 = new ModelRenderer(this, 35, 27);
      griff1.addBox(-1F, 2F, -2F, 1, 1, 4);
      griff1.setRotationPoint(-6F, 0F, 0F);
      griff1.setTextureSize(64, 32);
      griff1.mirror = true;
      setRotation(griff1, 0F, 0F, 0F);
      griff2 = new ModelRenderer(this, 35, 27);
      griff2.addBox(-13F, 2F, -2F, 1, 1, 4);
      griff2.setRotationPoint(-6F, 0F, 0F);
      griff2.setTextureSize(64, 32);
      griff2.mirror = true;
      setRotation(griff2, 0F, 0F, 0F);
      griff3 = new ModelRenderer(this, 0, 15);
      griff3.addBox(-12F, 3F, -1F, 11, 1, 2);
      griff3.setRotationPoint(-6F, 0F, 0F);
      griff3.setTextureSize(64, 32);
      griff3.mirror = true;
      setRotation(griff3, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5,entity);
    Griff.render(f5);
    kern.render(f5);
    spitze.render(f5);
    h1.render(f5);
    h2.render(f5);
    h3.render(f5);
    h4.render(f5);
    h5.render(f5);
    u1.render(f5);
    u2.render(f5);
    u3.render(f5);
    u4.render(f5);
    u5.render(f5);
    l1.render(f5);
    l2.render(f5);
    l3.render(f5);
    l4.render(f5);
    l5.render(f5);
    r1.render(f5);
    r2.render(f5);
    r3.render(f5);
    r4.render(f5);
    r5.render(f5);
    ende1.render(f5);
    ende2.render(f5);
    griff1.render(f5);
    griff2.render(f5);
    griff3.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5,Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5,entity);
  }

}
